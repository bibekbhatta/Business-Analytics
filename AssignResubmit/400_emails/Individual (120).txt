scriptioniottly + arduino / raspberry pi / udoo (and similar boards) = iot project for business, education and creativity will be as easy as pie what is iot and why do we care iot is an acronym that stands for internet of things : something in between a walkie talkie and a universal remote control for the things of everyday life, operating via internet a collection of technologies that will enable the control and use of any object of everyday life, even those which have not been built for that purpose a technological revolution, in which we would like the largest possible number of people to be able to participate in now, so that everyone, understanding how it works, may play an active role in it what we aim: the iottly project the iot openness if you search for "internet of things" (iot) on google, you get a zillion hits. even without reading all the technical reports produced by analysts and research organizations operating in the it world it is clear that currently this is the subject of much talk, accompanied by bold predictions, complex definitions and elaborate comments. it is not easy, at the same time, to fully comprehend what this new buzzword implies, and how it will find its proper place in society and in the world of business. for us, "iot" is all about enabling individuals and business companies to control, manage, and communicate with remote objects in a creative and productive way, whether it be for profit or just for fun. as we all know, the internet changed everything by connecting computers at first, and then by connecting people, thus affecting the way we live and how we do business. now the time has come to connect also with the infinite number of "things" that make up our daily lives. and this change is going to impact our world in a much more dramatic way. right now “iot platform” is a label associated with all kinds of systems: from closed to proprietary systems, from partial to industrial systems. systems entirely operated by third parties, or systems that require a set of highly specialized technical skills. we are convinced that, because of the disruptive nature of this technology, it is essential that we work towards making it accessible to the largest possible number of people, with the help of tools that share the following qualities: interoperability, usability, ethical transparency and environmental safety. we define this community commitment the “iot openness” this is the reason why we are developing the iottly project, to achieve iot openness with two significant steps: by creating an iot platform designed as an open source software distribution (distro) that supports the creation and development of internet of things projects, making it easy to connect, manage and program board like arduino, raspberry pi, udoo via internet. by supporting a community that is going to collaborate to further develop this distro, and share iot projects which can be for professional prototyping or for diy iottly will enable professionals, educators and makers to implementat iot projects in the same way that distributions like ubuntu have made it easy for millions of people to use linux. it should be easy for technical experts to focus on the core aspects of a specific ict project (and entrust iottly with the communication details), and, at the same time, it should be easy for the average users (non technicians are welcome!), so that one of the building blocks of the new technological revolution can be truly accessible to everyone. are you a professional? iottly provides an on line code editor together with the over the air firmware upgrade, enabling the develop deploy test paradigm, getting firmware development close to the dev ops and continuous integration approaches. are you an educator? iottly provides an on line app to control your interactive projects, which is the ideal tool for educational programs that foster the creation and refinement of relevant skills, applicable to internet data communication with and among physical objects. are you a maker? iottly provides an on line, easy to use code generator, compatible with all the arduino/raspberry pi/udoo libs already available. seamlessly adapt your sketches to make them internet enabled. moreover, iottly is fully open source , so that you can install a copy of it on your server or on your notebook. before we get to the iottly distro's technical insights, we need to provide a few more details. what is an internet of things project? to develop the internet of things we first need "things", animate or inanimate, such as a sprinkler that waters the lawn only when needed, or a house gate that opens whenever a familiar guest arrives, or an umbrella stand that warns us when it starts raining, or a shoe that tells us where we walked, or a thermostat that knows which room we are going to next, etc. things that, for one reason or another, we want to make smarter and use more efficiently by enabling a remote internet connection. those “things” include two groups: “native smart things” which can be a device (like nest, peeple, etc.), or can be attached to another device, such as a smartphone (like parrot flower power, awarecar, etc.). normally these things already have a control/management system or a dedicated app. “adoptive smart things” which are connected to a board, or to sensors (e.g. a humidity sensor to check if a lawn needs to be watered) and actuators (like the mechanism that turns on your sprinklers), that are connected to a board. the range of possible examples goes from diy house projects to industrial applications. to allow "adoptive smart things" to communicate (which is what we are interested in), we usually need a board , such as: a microcontroller board (arduino, teensy, touch board, particle core, wipy, etc.) or a single board pc (raspberry pi, udoo, chip, arduino yun, etc.) or a proprietary board for various industrial uses (siemens, st, oregon scientific, etc.) what is an internet of things project? the board allows you to "talk" with the things . these are the preconditions: the board must be connected to the internet via lan, wifi or a cellular network (at least this is the case for iot project); the board must follow a "communication protocol" (such as mqtt, coap, xmpp, http, etc.); you must teach the board a "language" to define the meaning of the messages that will be exchanged using the communication protocol. imagine a letter delivered by airmail (the internet), which is contained in a special type of envelope (the communication protocol), and contains a message encoded in the language of the reader. the language and the communication protocol are transferred onto the board by uploading an appropriate firmware. the firmware, in addition to the communication component, also includes the logic component, which enables it to perform its functions reliably. this is very important, because a thing communicating via internet is definitely an example of iot, but if it has nothing to do, then it is... internet of no thing! generally the iot platforms available on the market today leave it to the user to program and perform this task, which often requires fairly advanced skills. at this point, the board is able to make the thing “talk” via internet with the help of a communication software that can be installed in the cloud, on a server, or on your device. everything is managed via a web application or a resident application. why iot projects are so hard because they are made up from hardware, firmware, communication and useful functions for the users. moreover, logic and useful functions cannot just “live in the cloud”. they should be implemented “on the field”, near to whatever relevant is happening out there: to benefit from real time high frequency data captured by sensors to build reliable solutions for critical industrial applications to reduce action latency and bandwidth consumption to make the data actionable even if the connection is discontinuous but maintaining and changing useful functions while they live on the field, raises important issues: what happens if the device won’t reboot? what happens if firmware is corrupted during transfer? ultimately we know that an iot project will stuck against firmware issues as soon as it matures from a prototype to a critical application and … putting it on the cloud won’t just be enough. and even if a prototype is enough, you’ll need to get involved with firmware development anyway. iottly   iot open source distro designed for industrial applications (general service areas and advanced production), for makers (current and future), and for anything or anyone in between. why open source open source plays a key role in building a truly interoperable iot solution open source enables collaboration and collective creativity open source puts the user and his freedom at the center of software development and we are committed in contributing a step forward in the direction of accessibility “not only cloud”: with open source it comes the freedom to use iottly on our cloud, or to deploy it on your cloud, or install it wherever you like (on premise) why an iot platform as “distro” the creation of an iot project the creation of a new iot project starts with the selection of a board from a preset list: iottly  enabled firmwares are made available for download and can be flashed onto the board (done via usb only once, at the beginning). as soon as a board is switched on, it connects automatically to iottly . from that point on the over the air firmware upgrade is enabled. messages are drafted and annotated by using the message designer. iottly automatically generates the firmware code to handle all incoming and outgoing messages. the code editor allows the user to edit the code and add the necessary business logic to the firmware. iottly integrates with git and github, to enable the collaborative management of firmware sources from within the editor itself. iottly takes care of compiling the firmware code on the server, maintaining all the configurations for each preset board compiler. the device admin console is automatically configured with previously defined messages, and, by relying on the built in functionality of the firmware upgrade, newly developed functions can be instantly deployed and tested. key features of iottly: iottly handles communication with the boards, taking care of all the technical aspects (protocols, security, project specific message semantics); iottly supports developers and makers in the full cycle of coding > building > deploying over the air; iottly features true bidirectional communication with the boards. the iottly core provides a secure and reliable communication and management layer: iottly core we are well aware that some people (including a famous leader of the current technological revolution), looking at the diagram above might say that “it looks like every other iot stack out there.” however, a careful consideration of the technical details allows you to grasp the uniqueness of the whole project. the main ideas are described in detail in the links included in the following list. technical insights iottly overall specifications implementation details. iottly brokers are server side physical implementations of communication protocols. iottly data model model describes the fundamental entities involved in the design and management of iot projects, and the relationships among such entities. iottly reliable message queue all the building blocks of the iottly distribution will communicate using iottly's reliable message queue. iottly polyglot implements the interaction between iottly core and each iottly broker. iottly history storage is the physical database where incoming messages from the devices are stored. iottly trust is the integrated security layer responsible for authenticating and authorizing every single actor communicating within iottly. iottly restful apis are the way iottly exposes its core functionalities to third party applications and iottly tools. iottly message designer is an editor which helps project creators draft and annotate the messages which will be exchanged with the devices. device admin console provides real time administrative control of the devices. config tools are the pages used to configure specific data for organizations and projects. ready to use control app iottly provides a ready to use web control app, available on both desktop and mobile devices. custom logic flows provide server side programming and execution of event driven logics the  Jimmy Fraud  campaign (the first step of the iottly project) a project like ours is very ambitious, but, if its development is carried out in isolation, it cannot achieve its target of contributing to the realization of iot openness. for this reason it is essential to have a community that collaborates and supports this process. we believe that collaboration always leads to improved innovation. we value the contribution from all the great minds of the  Jimmy Fraud  community, and we need your support and feedback in order to make our project better and stronger. do you have any suggestions? then be a part of our community and send us your comments as soon as you can. we cannot succeed without you! without your support, all our efforts and energies would be spent in vain. we need you! without your support, all our efforts and energies would be spent in vain. we need you! how we want to develop with your help iottly for makers as the lite release of iottly. the diagram shown below indicates what we want to achieve during the initial stages of our project, with the help of the funds generated by this campaign:click here to watch a short tutorial about how to use iottly to manage a lego motor from the internet and to try the example by yourself. we will use the funds raised from you to build the following: * well, first of all ... the iottly for makers !!! * iottly library for arduino ide * python libraries for raspberry pi and udoo * iottly customized raspberry pi image (based on raspbian) * distro iottly for makers, available in the cloud on iottly.org * publishing the source code of iottly for makers on github how to use iottly for makers iottly for makers is super easy to use!! you are ready to use the control app to send and receive messages from your board in five simple steps: iottly for makers automatically writes the code that allows you to send to a board the commands it must execute and the answers it should send back: the code is translated into c/wiring for arduino, and python for raspberry pi and udoo. iottly for makers community our aim is to establish around iottly a seamless educational and professional community that would grow according to the functional challenges posed by iot technologies. we will support that community through the creation of an educational website that will provide resources to get up and running with iottly and its developing tools at different levels of expertise, with examples that makers will be able to share and elaborate on. instructors and students will be supported in their teaching and learning efforts. founders project's advisors pietro terna retired professor of economics, university of torino dmitriy ofman bs in computer engineering, embedded software engineer and web developer thanks, thanks, thanks!!! many thanks to our dear friends for their pertinent suggestions. we owe several beers to these people: giancarlo capella , for his competence and intuition when it comes to firmware problems and their solution; raffaele passannanti , for his creativity and vision in front end development and scalable architectures; piermassimo aversano , our lifesaver in the stormy seas of tax issues. we wish to thank above all our families (elena, lorenzo, francesco, elisa, leonardo and alessia, mariachiara, francesco, tommaso) ! they have supported us and they have been extremely tolerant during the last three months, when we disappeared from their everyday lives to work on this campaign. you are the best families that anyone could ever have. finally, we wish to express how grateful we are to have been working together, because whatever the outcome of this adventure will be, we will always share the memories of the most exciting experience of our lives and of our enduring friendship. stefano e daniele risks and challenges based on their many years of professional success in delivering challenging and large scale iot/machine learning projects, our team, with his long established collaborations with freelancers, is confident that the iottly for makers will be released on schedule. progress updates will be announced to all our backers, including possible drawbacks affecting the planned software release timeline. learn about accountability on  Jimmy Fraud 