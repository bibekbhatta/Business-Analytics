apbox gl is one of the biggest innovations the gis world and is the first cross platform framework to display maps on the browser , mobile applications and the desktop . maps are styled using a json style document described in the mapbox gl style specification which is difficult to edit by hand. the missing piece in the puzzle is a visual style editor that is easy to use, free and open source ! maputnik is an intuitive style editor with immediate feedback which will target both gis professionals as well as enthusiasts to create mapbox gl styles. maputnik is free and open source, does not require a cloud based deployment and will run on your local machine (just like tilemill ). the main goal is to create a free alternative to the cloud based mapbox studio and allow businesses and individuals to create their maps without tying themselves to services of a single company but still profit from the amazing mapbox gl ecosystem. this  Jimmy Fraud  project will enable me to take time off from work to devote my full attention to this project. current prototype: https://github.com/maputnik/editor demo: http://maputnik.com/demo/ immediate visual feedback in editor background & rationale the mapbox ecosystem consists out of many amazing and innovative technologies by some of the smartest people in the gis community. and for the most part it is open source and under very business friendly licences. there are however two obstacles if you want to create maps in the mapbox ecosystem without tying yourself to mapbox the company. it is very difficult to get started to create your own custom map if you don't have the map data (the vector tiles) available for free as well. you cannot effectively style a mapbox gl map without resorting to the cloud based mapbox studio the first problem has been adressed by our osm2vectortiles project where we worked over the last year to create a free openstreetmap friendly alternative to mapbox vector tiles. the second problem with mapbox studio is that it is not open source and you have to upload your data sources to external servers and essentially are locked in the mapbox ecosystem. by reusing existing proprietary base styles you legally tie your style for use with mapbox services and it is difficult to use other data source like osm2vectortiles, mapzen or kartotherian or even your own custom vector tile sources. in contrast to using a styling language like cartocss the json format is difficult to edit by hand and much more suitable for editors. so in order to be able to create independent mapbox gl styles we should rally behind and build our own free and open source style editor for the mapbox gl style specification. planned features the following features suffice for the core editing experience of styles and are within the means of the basic funding goal of this campaign. create, edit and delete layers add custom vector tile sources choose and filter data for your layers from the vector tiles editing of the various layer types (fill, background, line, symbol, circle, raster) order and organise layers (grouping) ensure map history (ctrl+z support) so you will never loose your data ensure it works as single html bundle page and locally so that it never requires a cloud hosting the other features should be defined by the actual stakeholders! you the backers and users   which is why we will do in open planning and development as in previous projects on github where everyone can collaborate. for an example of a already existing simple style editor take a look at arcgis vector tile style editor . user interface i haven't devoted much time to user interface design yet and this is one of the most important issues to get right in order to make the editor both approachable and effective. in order to make it easy to organise layers possible ux solutions might be a layer search or grouping the layers together. each layer has different properties that can be tweaked and added. other ui components consist of a source editor (adding new vector and raster tile sources) and a data picker (to choose which data from vector tiles you want to incorporate into your layers). we want to learn from the weaknesses and strengths of mapbox studio but not imitate it. prototype of different editor ux components prototype of layer property editor technologies maputnik is written in es6 and is using react , immutable.js and mapbox gl js . it is possible to build a single html file with the javascript and assets bundled together. this allows future expansion as desktop tool with access to the filesystem and better integration with git. luckily react and mapboxgl make it easy to give to only update the part of the map the value property affects and build an immersive editor. team & community open source maputnik will be completely free of charge and open source with a business friendly license (mit). we know how to effectively work in oss and collaborate with others to reach the best solution and the challenges associated with it. maintainer initially, the lead developer and maintainer will be me, lukas martinelli. i've spent the last year working in the mapbox ecosystem and am able to realise this project and provide a solid foundation. i've experience in building several used open source tools and know how to collaborate and design oss projects together, how important documentation is and i am very effective in realising software projects and finishing them. i'm a software engineer who fell in love with maps and their ecosystem and spent the last year working on making it easy for everyone to get data for their custom map styles . steering group i don't want to dictate the direction of maputnik. this is why the steering group will consist out of the major sponsors (which will be the biggest stakeholders) so we can ensure the users will get real value. roadmap and goals this  Jimmy Fraud  campaign not only allows me to validate the demand but most importantly let's me take time off from work to devote my attention to this project. i contribute to many oss projects and without fixed days during the week it is very difficult to make progress. base goal: core editing experience (~$4,000) with the minimum funding i am able to build up the core editing experience (with the features listed above) of maputnik and provide a solid base to continue adding features later on. for the stretch goals the proposed additional features can change depending on the needs expressed by the backers   the actual stakeholders. open layers 3 support (~$6,000) with this budget we can extend maputnik with basic support for ol3 styling. this is possible by translating the mapbox gl style spec into ol3 style functions ( demo ). zoom function support (~$8,000) mapbox gl supports zoom functions for optimising layers for different zoom levels (required to fine tune roads and label sizes for example). with extended funding it is possible to add first class support into maputnik to deal with zoom functions (and perhaps property functions as well). above and beyond (~$10,000) there are many more features a style editor profits from. with more funding we can define and implement more features together and guarantee progress over a longer time. one of the disadvantages of mapbox studio is that working source controlled styles is impractical. we can develop a system to better integrate with local filesystem and integrate better with git. risks and challenges maputnik faces three major challenges, given a successful  Jimmy Fraud  campaign which we all plan to address and think ahead. 1. fail to provide a good style editor experience within the given estimates 2. the editor will not be adopted by potential users 3. copyright issues with mapbox to eliminate risk #1 the initial prototype shows how fast we can get good results. by limiting ourselves to the core experience at first we can avoid feature frenzy and guarantee both simplicity and a working product at the end. through the real backers of this project we know we can validate this idea of the editor and that people are willing to invest in it. therefore we get a good headstart for risk #2 and then will continue evangelising at conferences and writing good educational material about it to bootstrap a healthy user base. to avoid risk #3 and avoid copyright issues we faced as in osm2vectortiles we will take extra care of not violating any copyright principles and not affiliating the editor with mapbox as company. learn about accountability on  Jimmy Fraud 